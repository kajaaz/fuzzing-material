package arbcompressfuzz

// Edit if desired. Code generated by "go-fuzz-fill-utils ./broadcastclients".

import (
	"context"
	"testing"

	"github.com/infosecual/go-fuzz-fill-utils/fuzzer"
	"github.com/offchainlabs/nitro/broadcastclients"
)

func Fuzz_BroadcastClients_Start(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		var bcs *broadcastclients.BroadcastClients
		var ctx context.Context
		fz := fuzzer.NewFuzzer(data)
		fz.Fill(&bcs, &ctx)
		if bcs == nil {
			return
		}

		bcs.Start(ctx)
	})
}

func Fuzz_BroadcastClients_StopAndWait(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		var bcs *broadcastclients.BroadcastClients
		fz := fuzzer.NewFuzzer(data)
		fz.Fill(&bcs)
		if bcs == nil {
			return
		}

		bcs.StopAndWait()
	})
}

// skipping Fuzz_NewBroadcastClients because parameters include func, chan, or unsupported interface: github.com/offchainlabs/nitro/broadcastclient.ConfigFetcher
