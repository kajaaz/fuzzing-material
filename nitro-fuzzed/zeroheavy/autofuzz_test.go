package arbcompressfuzz

// Edit if desired. Code generated by "go-fuzz-fill-utils ./zeroheavy/".

import (
	"io"
	"testing"

	"github.com/infosecual/go-fuzz-fill-utils/fuzzer"
	"github.com/offchainlabs/nitro/zeroheavy"
)

func Fuzz_ZeroheavyDecoder_Read(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		var source io.Reader
		var p []byte
		fz := fuzzer.NewFuzzer(data)
		fz.Fill(&source, &p)

		br := zeroheavy.NewZeroheavyDecoder(source)
		br.Read(p)
	})
}

func Fuzz_ZeroheavyEncoder_Read(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		var inner io.Reader
		var p []byte
		fz := fuzzer.NewFuzzer(data)
		fz.Fill(&inner, &p)

		enc := zeroheavy.NewZeroheavyEncoder(inner)
		enc.Read(p)
	})
}

func Fuzz_NewZeroheavyDecoder(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		var source io.Reader
		fz := fuzzer.NewFuzzer(data)
		fz.Fill(&source)

		zeroheavy.NewZeroheavyDecoder(source)
	})
}

func Fuzz_NewZeroheavyEncoder(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		var inner io.Reader
		fz := fuzzer.NewFuzzer(data)
		fz.Fill(&inner)

		zeroheavy.NewZeroheavyEncoder(inner)
	})
}
