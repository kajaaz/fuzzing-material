package arbcompressfuzz

// Edit if desired. Code generated by "go-fuzz-fill-utils ./gethhook/".

import (
	"testing"

	"github.com/ethereum/go-ethereum/core/vm"
	"github.com/infosecual/go-fuzz-fill-utils/fuzzer"
	"github.com/offchainlabs/nitro/gethhook"
)

func Fuzz_ArbosPrecompileWrapper_RequiredGas(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		var p gethhook.ArbosPrecompileWrapper
		var input []byte
		fz := fuzzer.NewFuzzer(data)
		fz.Fill(&p, &input)

		p.RequiredGas(input)
	})
}

func Fuzz_ArbosPrecompileWrapper_Run(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		var p gethhook.ArbosPrecompileWrapper
		var input []byte
		fz := fuzzer.NewFuzzer(data)
		fz.Fill(&p, &input)

		p.Run(input)
	})
}

func Fuzz_ArbosPrecompileWrapper_RunAdvanced(f *testing.F) {
	f.Fuzz(func(t *testing.T, data []byte) {
		var p gethhook.ArbosPrecompileWrapper
		var input []byte
		var gasSupplied uint64
		var info *vm.AdvancedPrecompileCall
		fz := fuzzer.NewFuzzer(data)
		fz.Fill(&p, &input, &gasSupplied, &info)
		if info == nil {
			return
		}

		p.RunAdvanced(input, gasSupplied, info)
	})
}
